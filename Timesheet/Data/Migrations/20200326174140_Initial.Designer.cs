// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Timesheet.Data;

namespace Timesheet.Data.Migrations
{
    [DbContext(typeof(TimesheetContext))]
    [Migration("20200326174140_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Timesheet.Domain.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("End");

                    b.Property<DateTime>("Start");

                    b.Property<Guid?>("TimesheetId");

                    b.HasKey("Id");

                    b.HasIndex("TimesheetId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Timesheet.Domain.Timesheet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Timesheets");
                });

            modelBuilder.Entity("Timesheet.Domain.Appointment", b =>
                {
                    b.HasOne("Timesheet.Domain.Timesheet")
                        .WithMany("Appointments")
                        .HasForeignKey("TimesheetId");
                });
#pragma warning restore 612, 618
        }
    }
}
